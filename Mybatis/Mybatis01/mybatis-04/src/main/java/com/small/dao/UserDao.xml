<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.small.dao.UserDao">

    <!--
        parameterType : dao接口中方法参数的数据类型
        parameterType的值是java的数据类型全限定名称或者是 Mybatis定义的别名
        parameterType = "java.lang.Integer" / = "int"

        mybatis可以通过反射机制发现接口参数的数据类型,可以不写

        使用#{},Mybatis执行sql是使用JDBC的PrepareStatement的对象
        1.Mybatis创建Connection,PreparedStatement对象
          String sql = "select id,name,pwd from user where id=?";
          PreparedStatement pst = conn.preparedStatement(sql);
          pst.setInt(1,1)
        2. 执行性sql封装resultType = "com..."这个对象
           ResultSet rs = ps.executeQuery();
           while(rs.next()){
           //从数据库取表的一行数据,存到一个Java对象属性中
           User user = new User();
           user.setId(rs.getInt("id");
           user.setString(rs.getString("name");
           }
           return user;//给了dao方法调用的返回值
    -->
    <select id="selectUserById" parameterType="java.lang.Integer" resultType="com.small.domain.User">
        select id,name,pwd from user where id=#{UserId}
    </select>

    <select id="selectMulitParam" resultType="com.small.domain.User">
        select * from user where name=#{myname} or pwd=#{mypwd}
    </select>

    <!--多个参数,使用Java对象的属性值,作为实际对象
        使用对象语法: #{属性名,JavaType=类型名称,JDBCType=数据类型}很少用
        name=#{paraName,javaType=java.lang.String,jdbcType=VARCHAR}

        简化方式:#{属性名},javaType,jdbcType的值Mybatis反射能获取
    -->
    <select id="selectMultiObject" resultType="com.small.domain.User">
        select * from user where id=#{paramId} or name=#{paramName}
    </select>

    <select id="selectPosition" resultType="com.small.domain.User">
        select * from user where id=#{arg0} or name=#{arg1}
    </select>

    <select id="selectMap" resultType="com.small.domain.User">
        select * from user where id=#{id} or name=#{myname}
    </select>

    <select id="select$Order" resultType="com.small.domain.User">
        select * from user order by ${colName}
    </select>

</mapper>